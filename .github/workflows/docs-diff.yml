# Check for changes in docs output.
name: Docs Diff
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-head:
    name: Build docs on HEAD.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') }}
      ### Setup dependencies
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
      - name: Install Ruby + gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.4
          working-directory: "languages/ruby"
      - name: Install yard
        run: gem install yard
      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      ### Build Rust WASM target
      - name: Add WebAssembly target
        run: rustup target add wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build Rust WASM
        run: make wasm-build
      ### Build Python package
      - name: Build Python
        run: make python-build
      ### Build docs
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.79.1'
      - name: Build Hugo docs
        run: make build
        working-directory: docs
      - name: Upload new build of docs.
        uses: actions/upload-artifact@v2
        with:
          name: new-docs
          path: docs/public
  build-base:
    name: Build docs on base.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') }}
      ### Setup dependencies
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
      - name: Install Ruby + gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.4
          working-directory: "languages/ruby"
      - name: Install yard
        run: gem install yard
      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      ### Build Rust WASM target
      - name: Add WebAssembly target
        run: rustup target add wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build Rust WASM
        run: make wasm-build
      ### Build Python package
      - name: Build Python
        run: make python-build
      ### Build docs
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.79.1'
      - name: Build Hugo docs
        run: make build
        working-directory: docs
      - name: Upload old build of docs.
        uses: actions/upload-artifact@v2
        with:
          name: old-docs
          path: docs/public
  diff:
    name: Diff
    needs: [build-head, build-base]
    runs-on: ubuntu-latest
    steps:
      - name: Pull old build of docs.
        uses: actions/download-artifact@v2
        with:
          name: old-docs
          path: base
      - name: Pull new build of docs.
        uses: actions/download-artifact@v2
        with:
          name: new-docs
          path: head
      - name: Remove ignored files (generated api docs)
        run: rm -rf base/java/reference/api base/python/reference/api base/ruby/reference/api base/node/reference/api
      - name: Remove ignored files (generated api docs)
        run: rm -rf head/java/reference/api head/python/reference/api head/ruby/reference/api head/node/reference/api

      - name: Diff
        run: diff --recursive base head | tee diff.txt
      - id: get-comment-body
        run: |
          body=$(cat <<EOF
            This PR contains docs changes. Comment "Docs changes ok" if you expected this,
            or review the changes by running the docs locally, checking for out of date
            code snippets.

            Diff:

          EOF
          )
          body=$(cat <(echo $body) diff.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"
      - name: Comment
        uses: peter-evans/create_or_update_comment@v1
        with:
          issue-number: ${{ github.event.number }}
          body: : ${{ steps.get-comment-body.outputs.body }}
